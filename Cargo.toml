[package]
name = "riot-wrappers"
version = "0.8.0"
authors = ["Christian Ams√ºss <chrysn@fsfe.org>"]
edition = "2021"

description = "Rust API wrappers for the RIOT operating system"
documentation = "https://rustdoc.etonomy.org/riot_wrappers/"
repository = "https://github.com/RIOT-OS/rust-riot-wrappers"
keywords = ["riot", "riot-os", "iot", "bindings", "embedded-hal-impl"]
categories = ["api-bindings", "no-std"]
# This is chosen to ease code migration between this and other implementations
# of embedded-hal. Beware that for any practical use, the LGPL terms of RIOT-OS
# still apply to resulting binary; this is visible to any Cargo based license
# checkers by the matching license set on the riot-sys crate.
license = "MIT OR Apache-2.0"


[dependencies]
embedded-hal = { version = "0.2.4", features = ["unproven"] }
nb = "0.1.1"
riot-sys = "0.7.8"
num-traits = { version = "0.2", default-features = false }
mutex-trait = "0.2"

bare-metal = "1"

cstr = "^0.2.11"

heapless = "^0.7"

# For nimble UUID parsing and some debug implementations
hex = { version = "^0.4.3", default-features = false }

coap-numbers = { version = "^0.2.0", optional = true }

embedded-graphics = "0.6"

# Originally disabled by default because they were not published yet; now
# disabled by default we're moving toward opt-in modules anyway.
coap-message = { version = "^0.2.3", optional = true }
coap-handler = { version = "^0.1.4", optional = true }
embedded-nal = { version = "0.6.0", optional = true }
embedded-nal-tcpextensions = { version = "0.1", optional = true }
pin-utils = "0.1"

[build-dependencies]
shlex = "0.1.1"

[features]
default = []

# Set a panic handler.
#
# Unless a panic handler is provided by another mechanism, exactly one crate in
# an application should set this feature.
set_panic_handler = []

# If present, the panic handler uses string formatting to produce an error
# message. Otherwise, it just writes a static panic message to stdout.
panic_handler_format = []

# If present, the panic handler calls to `core_panic` and thus halts the full
# system. Otherwise, the panic in thread mode outside of a critical section
# only affects that single thread.
panic_handler_crash = []

# If these are present, traits for the respective optional dependencies will be
# implemented.
with_coap_message = ["coap-message" ]
with_coap_handler = ["coap-handler", "coap-numbers", "with_coap_message"]
with_embedded_nal = ["embedded-nal", "embedded-nal-tcpextensions"]

# See msg::v2 documentation. Enabling this exposes components not under semver
# guarantees.
with_msg_v2 = []

# Use actual `!` rather than the stable Never workaround. As far as the
# workaround is understood, this causes no actual change in any types, just in
# the private names that are assigned to them.
#
# This is primarily for documentation building; enabling it may also help users
# of nightly when they see a mess of types.
actual_never_type = []
